fastlane_version '2.53.1'

before_all do
  ensure_git_branch
  ensure_git_status_clean
  git_pull
end

platform :ios do
  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    match(app_identifier: 'com.snowflake.depunaise', type: 'development', readonly: true)
    match(app_identifier: 'com.snowflake.depunaise', type: 'appstore', readonly: true)
  end

  desc 'Build the iOS application.'
  private_lane :build do
    certificates
    increment_build_number(xcodeproj: './ios/DePunaise.xcodeproj')
    gym(scheme: 'DePunaise', workspace: './ios/DePunaise.xcworkspace')
  end

  desc 'Ship to Testflight.'
  lane :beta do
    build
    pilot
    commit_version_bump(message: 'Bump build', xcodeproj: './ios/DePunaise.xcodeproj')
    push_to_git_remote
  end
end

platform :android do
  def increment_version_code(gradle_build: 'android/app/build.gradle')
    sh %Q{cd ../ && echo "$(awk '{sub(/versionCode [[:digit:]]+$/,"versionCode "$2+1)}1' #{gradle_build})" > #{gradle_build} && cd -}
  end

  desc 'Build the Android application.'
  private_lane :build do
    pass = prompt(
      text: "Sign Pass: "
    )

    increment_version_code gradle_build: './android/app/build.gradle'
    gradle( task: 'clean', project_dir: './android' )
    gradle( task: 'assemble', build_type: 'Release', project_dir: './android', properties: {
      'android.injected.signing.store.file' => './android/app/keys',
      'android.injected.signing.store.password' => pass,
      'android.injected.signing.key.alias' => 'key',
      'android.injected.signing.key.password' => pass
    })
    commit_android_version_bump( gradle_file_folder: 'android/app' )
    push_to_git_remote
  end

  desc 'Ship to alpha'
  lane :alpha do
    build
    upload_to_play_store(track: 'alpha')
  end

  desc 'Ship to beta'
  lane :beta do
    build
    upload_to_play_store(track: 'beta')
  end
end
